<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1400.v7fd111b_ec82f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2184.v0b_358b_953e69"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2184.v0b_358b_953e69">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>dev</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3883.vb_3ff2a_e3eea_f">
    <script>pipeline {
    agent any
    
    environment {
        AWS_ACCOUNT_ID = &quot;${env.AWS_ACCOUNT_ID}&quot;
        VPC_ID = &quot;${env.VPC_ID}&quot;
        AWS_DEFAULT_REGION = &quot;${env.AWS_DEFAULT_REGION}&quot;
        AWS_ACCESS_KEY_ID = &quot;${env.AWS_ACCESS_KEY_ID}&quot;
        AWS_SECRET_ACCESS_KEY = &quot;${env.AWS_SECRET_ACCESS_KEY}&quot;
    }
    
    stages {

        stage(&apos;CLEAR CACHE&apos;) {
            steps {
                script {
                    
                    sh &quot;&quot;&quot;
                        aws cloudfront create-invalidation \
                            --distribution-id E2CKY769PXFXOQ \
                            --path &apos;/*&apos;
                    &quot;&quot;&quot;
                    
                }
            }
        }

    }
    
    post {
        success {
            echo &apos;Successfully Cleared!&apos;
        }
        failure {
            echo &apos;Failed!&apos;
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>