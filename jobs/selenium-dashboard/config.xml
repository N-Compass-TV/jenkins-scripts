<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1400.v7fd111b_ec82f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2184.v0b_358b_953e69"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2184.v0b_358b_953e69">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3883.vb_3ff2a_e3eea_f">
    <script>pipeline {
    agent any
    
    environment {
        REPO_URL = &apos;git@github.com:N-Compass-TV/qa-automation-nctv-dashboard-v1.git&apos;
        SSH_CREDENTIAL_ID = &quot;github-ssh-jenkins-server&quot;
        PROJECT_BRANCH = &quot;dashboard&quot;
        GIT_SSH_COMMAND = &quot;ssh -o StrictHostKeyChecking=no&quot;
    }

    stages {
        /*
        stage(&apos;SSH&apos;) {
            steps {
                // Create a new branch based on the main branch
                script {
                    sh &quot;git ls-remote -h -- git@github.com:N-Compass-TV/qa-automation-nctv-dashboard-v1.git HEAD&quot;
                }
            }
        }
        */
        stage(&apos;CHECKOUT&apos;) {
            steps {
                // Checkout the main branch
                script {
                    git branch: PROJECT_BRANCH, credentialsId: SSH_CREDENTIAL_ID, url: REPO_URL
                }
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>